name: nanopy
on: [push]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: |
          sudo apt update && sudo apt install clang libomp-dev
          pip install -e .[dev] && pytest && mypy && pylint nanopy
          rm -rf build && CC=clang pip install -e .[dev] && pytest
        if: runner.os == 'Linux'
      - run: |
          brew install gcc llvm libomp
          CC=gcc-14 pip install -e .[dev] && pytest
          rm -rf build && CC=$(brew --prefix llvm)/bin/clang pip install -e .[dev] && pytest
        if: runner.os == 'macOS'
        continue-on-error: true
      - run: pip install -e .[dev] && pytest
        if: runner.os == 'Windows'
      - run: |
          sudo apt install ocl-icd-opencl-dev intel-opencl-icd
          rm -rf build && USE_GPU=1 pip install .[dev]
        if: matrix.os == 'ubuntu-latest'
